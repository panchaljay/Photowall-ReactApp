{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Photo.js","Components/Photowall.js","Components/AddPhoto.js","Components/Comments.js","Components/Single.js","Components/Main.js","database/config.js","redux/actions.js","Components/App.js","index.js"],"names":["posts","rootReducer","combineReducers","state","_posts","action","type","slice","index","post","comments","postId","comment","Photo","props","className","to","id","src","imageLink","alt","description","onClick","startRemovingPosts","history","push","length","Photowall","style","textDecoration","color","class","sort","x","y","map","AddPhoto","handelsubmit","bind","event","preventDefault","target","Link","value","Number","Date","this","startAddingPost","onHistory","onSubmit","placeholder","name","Component","Comments","handleSubmit","elements","startAddingComment","hidden","Single","match","params","find","findIndex","loading","Main","startloadingPost","then","setState","startLoadingComments","exact","path","render","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","addPost","catch","error","console","log","once","snapshot","forEach","childSnapshot","val","loadPosts","updates","removePost","addComment","key","Object","values","loadComments","App","withRouter","connect","dipatch","bindActionCreators","actions","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.66fd25b4.chunk.js","sourcesContent":["const posts = []\r\n\r\n  export default posts","import _posts from '../data/posts'\r\nimport {combineReducers} from 'redux'\r\n\r\n\r\nfunction comments(state={} ,action){\r\n    switch (action.type){\r\n        case'ADD_COMMENT':\r\n            if(!state[action.postId]) {\r\n                return {...state, [action.postId]: [action.comment]}\r\n            }    else {\r\n                return {...state ,[action.postId]: [...state[action.postId] ,action.comment] }\r\n            }\r\n        case'LOAD_COMMENTS': return action.comments    \r\n            \r\n        default: return state\r\n    }\r\n}\r\n\r\nfunction posts(state = _posts, action) {\r\n\r\n    \r\n    switch (action.type) {\r\n        case 'REMOVE_POST': return [...state.slice(0, action.index), ...state.slice(action.index + 1)]\r\n        case 'ADD_POST': return [...state, action.post]\r\n        case 'LOAD_POSTS': return action.posts\r\n        default: return state\r\n    \r\n    }\r\n\r\n\r\n}\r\nconst rootReducer= combineReducers({posts, comments})\r\n\r\nexport default rootReducer","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nfunction Photo(props) {\r\n    const post = props.post\r\n    return <figure className=\"figure\">\r\n        <Link to={`/single/${post.id}`}> <img className= \"photo\" src={post.imageLink} alt={post.description}/></Link>\r\n        <figcaption> <p> {post.description} </p>  </figcaption>\r\n        <div className=\"button-container\">\r\n            <button onClick={() => {\r\n                props.startRemovingPosts(props.index, post.id)\r\n                props.history.push('/')\r\n            }}> Remove </button>\r\n            <Link className=\"button\" to={`/single/${post.id}`}>\r\n                <div className=\"comment-count\">\r\n                    <div className=\"speech-bubble\"></div>\r\n                    {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n                </div>\r\n            </Link>\r\n        </div>\r\n    </figure>\r\n}\r\n\r\nPhoto.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n\r\n}\r\n\r\n\r\nexport default Photo","import React from 'react'\r\nimport Photo from './Photo'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nfunction Photowall(props) {\r\n    return (\r\n        <div>\r\n            <Link\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n                to=\"/AddPhoto\">\r\n                <i class=\"addIcon fa-duotone fa-plus\"></i>\r\n            </Link>\r\n            <div className=\"photoGride\" >\r\n                {props.posts\r\n                    .sort(function (x, y) {\r\n                        return y.id - x.id\r\n                    })\r\n                    .map((post, index) => <Photo key={index} post={post} {...props} index={index} />)}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nPhotowall.propTypes = {\r\n    posts: PropTypes.array.isRequired,\r\n\r\n}\r\n\r\nexport default Photowall","import React, { Component } from \"react\"\r\n\r\nclass AddPhoto extends Component {\r\n    constructor() {\r\n        super();\r\n        this.handelsubmit = this.handelsubmit.bind(this)\r\n    }\r\n\r\n    handelsubmit(event) {\r\n        event.preventDefault();\r\n        const imageLink = event.target.Link.value;\r\n        const description = event.target.description.value;\r\n        const post = {\r\n            id: Number(new Date()),\r\n            imageLink: imageLink,\r\n            description: description\r\n        }\r\n        if (description && imageLink) {\r\n            this.props.startAddingPost(post)\r\n            this.props.onHistory.push('/')\r\n\r\n        }\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"form\">\r\n                    <form onSubmit={this.handelsubmit}>\r\n                        <input type=\"text\" placeholder=\"Link\" name=\"Link\" />\r\n                        <input type=\"text\" placeholder=\"Description\" name=\"description\" />\r\n                        <button> Post </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddPhoto","import React, { Component } from 'react'\r\n\r\nclass Comments extends Component {\r\n\r\nconstructor(){\r\nsuper()\r\nthis.handleSubmit=this.handleSubmit.bind(this)\r\n\r\n}\r\n    handleSubmit(event){\r\n    event.preventDefault()\r\n        const comment =event.target.elements.comment.value\r\n        this.props.startAddingComment(comment , this.props.id)\r\n        event.target.elements.comment.value =''\r\n    }\r\n    render() {\r\n        \r\n        return <div className=\"comment\">\r\n            {\r\n                 this.props.comments.map((comment, index) => {\r\n                     return (\r\n                         <p key={index}> {comment} </p>\r\n                     )\r\n                 })\r\n            }\r\n\r\n                <form className=\"comment-form\" onSubmit={this.handleSubmit}>\r\n                <input type=\"text\" placeholder=\"comment \" name=\"comment\"/>\r\n                <input type=\"submit\" hidden />\r\n            </form>\r\n        </div>\r\n    }\r\n\r\n}\r\nexport default Comments","import React,{Component} from 'react'\r\nimport Photo from './Photo'\r\nimport Comments from './Comments'\r\n\r\nclass Single extends  Component {\r\n    render (){\r\n        const {match,posts}= this.props\r\n        const id =Number(match.params.id)\r\n        const post =posts.find((post) => post.id ===id)\r\n        const comments =this.props.comments[match.params.id] || []\r\n        const index=this.props.posts.findIndex((post) => post.id === id)\r\n        if (this.props.loading === true) {\r\n            return <div className=\"loader\"> ...loading </div>\r\n            } else if (post) { \r\n            return <div className='single-photo'>\r\n            <Photo post={post} {...this.props} index={index}/>\r\n            <Comments startAddingComment={this.props.startAddingComment} comments={comments} id = {id}/>\r\n            </div> \r\n            } else {\r\n            return <h1> ...no post found </h1>\r\n            }\r\n     }\r\n}\r\nexport default Single","import React, { Component } from \"react\"\r\nimport Photowall from './Photowall'\r\nimport AddPhoto from './AddPhoto'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport Single from './Single'\r\n\r\nclass Main extends Component {\r\n\r\n      state = { loading: true}\r\n\r\n    componentDidMount() {\r\n      this.props.startloadingPost().then(() => {\r\n        this.setState({loading: false})\r\n      })\r\n      this.props.startLoadingComments()\r\n    }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div>\r\n        <h1>\r\n          <Link to=\"/\"> Photowall </Link>\r\n        </h1>\r\n        <Route exact path=\"/\" render={() => (\r\n          <div>\r\n\r\n            <Photowall {...this.props} />\r\n          </div>\r\n        )} />\r\n\r\n        <Route path=\"/AddPhoto\" render={({ history }) => (\r\n          <AddPhoto {...this.props} onHistory={history} />\r\n\r\n        )} />\r\n        <Route path=\"/single/:id\" render={(params) => (\r\n          <Single loading={this.state.loading} {...this.props} {...params} />\r\n        )} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Main\r\n","import firebase from 'firebase'\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBTKCbHvbI1ErC25UeRa9EkK12nsVZmjA8\",\r\n    authDomain: \"photowall-e106b.firebaseapp.com\",\r\n    databaseURL: \"https://photowall-e106b-default-rtdb.firebaseio.com\",\r\n    projectId: \"photowall-e106b\",\r\n    storageBucket: \"photowall-e106b.appspot.com\",\r\n    messagingSenderId: \"480224168156\",\r\n    appId: \"1:480224168156:web:f19e9c09f4416d6aaf8c19\",\r\n    measurementId: \"G-4LRDYPHJ1E\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n  const database = firebase.database()\r\n  \r\n  export {database}","// import { func } from \"prop-types\"\r\nimport { database } from \"../database/config\"\r\nexport function startAddingPost(post) {\r\n    return (dispatch) => {\r\n        return database.ref('posts').update({ [post.id]: post }).then(() => {\r\n            dispatch(addPost(post))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startloadingPost() {\r\n    return (dispatch) => {\r\n        return database.ref('posts').once('value').then((snapshot) => {\r\n            let posts = []\r\n            snapshot.forEach((childSnapshot) => {\r\n                posts.push(childSnapshot.val())\r\n            })\r\n            dispatch(loadPosts(posts))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startRemovingPosts(index, id) {\r\n    const updates = {\r\n        [`posts/${id}`]: null,\r\n        [`comments/${id}`]: null\r\n    }\r\n    return (dispatch) => {\r\n        return database.ref().update(updates).then(() => {\r\n            dispatch(removePost(index))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function startAddingComment(comment, postId) {\r\n    return (dispatch) => {\r\n        return database.ref(`comments/${postId}`).push(comment).then(() => {\r\n            dispatch(addComment(comment, postId))\r\n        }).catch((error) => {\r\n            console.log(error)\r\n        })\r\n    }\r\n}\r\n\r\nexport function startLoadingComments() {\r\n    return (dispatch) => {\r\n        return database.ref('comments').once('value').then((snapshot) => {\r\n            let comments = {}\r\n            snapshot.forEach((childSnapshot) => {\r\n                comments[childSnapshot.key] = Object.values(childSnapshot.val())\r\n            })\r\n            dispatch(loadComments(comments))\r\n        })\r\n    }\r\n}\r\nexport function loadComments(comments) {\r\n    return {\r\n        type: 'LOAD_COMMENTS',\r\n        comments\r\n    }\r\n}\r\nexport function removePost(index) {\r\n    return {\r\n        type: 'REMOVE_POST',\r\n        index\r\n    }\r\n}\r\n\r\n\r\nexport function addPost(post) {\r\n    return {\r\n        type: 'ADD_POST',\r\n        post\r\n    }\r\n}\r\n\r\nexport function addComment(comment, postId) {\r\n    return {\r\n        type: 'ADD_COMMENT',\r\n        comment,\r\n        postId\r\n    }\r\n}\r\n\r\nexport function loadPosts(posts) {\r\n    return {\r\n        type: 'LOAD_POSTS',\r\n        posts\r\n    }\r\n}","import Main from \"./Main\"\r\nimport { connect } from \"react-redux\"\r\nimport { bindActionCreators } from \"redux\"\r\nimport * as actions from '../redux/actions'\r\nimport{withRouter} from 'react-router'\r\nfunction mapStateToProps(state){\r\n    return{\r\n        posts: state.posts,\r\n        comments: state.comments\r\n    }\r\n}\r\n\r\n\r\nfunction mapDispatchToProps(dipatch){\r\n    return bindActionCreators(actions, dipatch)\r\n\r\n}\r\n\r\nconst App = withRouter(connect(mapStateToProps,mapDispatchToProps)(Main))\r\n    \r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/stylesheet.css'\r\nimport {BrowserRouter} from 'react-router-dom'\r\nimport {createStore , applyMiddleware} from 'redux'\r\nimport rootReducer from './redux/reducer'\r\nimport {Provider} from 'react-redux'\r\nimport App from './Components/App'\r\nimport thunk from 'redux-thunk'\r\n// import {database} from './database/config'\r\n\r\nconst store = createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(thunk))\r\n\r\nReactDOM.render(<Provider store={store}><BrowserRouter><App/></BrowserRouter></Provider>, document.getElementById('root'));  "],"sourceRoot":""}